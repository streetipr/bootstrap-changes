#!/usr/bin/env bash
# SealyJ
# version 0.2
today=$(date +"%m_%d_%Y")
backup_location=/storage/emulated/0/tel/backup

check_folders(){
if [ ! -d /storage/emulated/0 ] ; then
	echo "Error - No access to phone storage"
	echo "backups are made to /storage/emulated/0/tel, (this path is also accessible to TEL through ~/storage/shared/tel) if TEL hasn't been granted storage permissions, this will likely fail. Run termux-setup-storage to grant access"
	echo program will exit.. && exit
fi

if [ ! -d /storage/emulated/0/tel ] ; then
	echo "Creating backup folder at: $backup_location"
	mkdir $backup_location
fi

if [ ! -d "$backup_location/$today" ] ; then
	echo "Creating $backup_location/$today"
	mkdir $backup_location/$today
fi
}


make_backup(){
while true
do
	echo 'This utility will create a gzip backup of everything in your home directory ('~')' 
	echo 'How backups will be restored is left up to the user'
	read -p "This will overwrite any previous backups made the same day are you sure you want to continue? y/N : " answer
case $answer in
	[yY]* )
		
		
		printf "\e[38;5;2m Backup\e[m%s8: creating installed pkgs list..."
		pkg list-all > $backup_location/$today/userpkgs.txt
		printf "\e[38;5;2m Backup\e[m%s8: backing up configs..."
		tar czf userconfs_$backup_name.tar.gz ~/.tel/configs >&/dev/null
		printf "\e[38;5;2m Backup\e[m%s8: backing up termux settings..."
		tar czf termux_$backup_name.tar.gz ~/.termux >&/dev/null
		printf "\e[38;5;2m Backup\e[m%s8: backing up TEL user data..."
		tar czf userdata_$backup_name.tar.gz ~/.tel/data >&/dev/null
		
		#show working spinner
		PID=$!
		i=1
		sp="/-\|"
		echo -n ' '
		while [ -d /proc/$PID ]
		do
			  printf "\b${sp:i++%${#sp}:1}"
			  sleep 0.1
		done
		echo "Finished"
		break;;

	[nN]* ) exit;;
	* )     echo "options are y or n...";;
esac
done

}

restore_backup(){
	echo 'WIP restore selected'
}

exit_utility(){
	echo exiting
	exit 0
}

main() {
check_folders

printf "\e[38;5;2m Backup & Restore\e[m%s8: Please choose an option"
#show menu
PS3="Enter a number: "

select option in make_backup restore_backup exit_utility
do
    echo "Selected: $option"
	$option    
	exit 0
#echo "Selected number: $REPLY"
done
}

main $@

