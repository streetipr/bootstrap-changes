#!/usr/bin/env bash
# # # TEL profile file - called with each terminal spawned # # # 
### liable to be overwritten with updates ###
# sourced before .zlogin and .zshrc and after .zshenv

. ~/.tel/scripts/readconfigs.sh #read user settings

# Check if session is remote or local
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
  SESSION_TYPE=remote/ssh
else
  case $(ps -o comm= -p $PPID) in
    sshd|*/sshd) SESSION_TYPE=remote/ssh;;
  esac
fi


#if [ "$THEME_COLS" == 'true' ] ; then
#	[[ -f ~/.cache/wal/sequences ]] && (~/.local/bin/wal -R -q -e && cat ~/.cache/wal/sequences)
#fi
if [ -z "$SESSION_TYPE" ] ; then # user not logged in via ssh
	if [ "$USE_TMUX" == 'true' ] ; then # user config choice
		if [ -z "$TMUX" ] ; then # tmux not running
			tmux has-session -t "TEL" > /dev/null 2>&1
			if [ $? != 0 ]; then # start main TEL session if not already running
				tmux new-session -n "$NAME" -s "TEL" '~/.tel/scripts/startup.sh ; [[ -f ~/storage/shared/tel/tel_startup.sh ]] && . ~/storage/shared/tel/tel_startup.sh ; $SHELL'
			else # start unique tmux session for each Termux session
				session_number=$(tmux ls | wc -l)
				#tmux new-session -f ~/.tmux.conf -s "TEL$session_number" 
				tmux new-session -s "TEL$session_number" 
			fi
		fi
	else # User disabled tmux startup 
		~/.tel/scripts/startup.sh
		[[ -f ~/storage/shared/tel/tel_startup.sh ]] && . ~/storage/shared/tel/tel_startup.sh
	fi 

else # USER is connected via SSH 
	~/.tel/scripts/ssh_connection.sh #  sets basic behaviour
	if [ "$USE_TMUX" == 'true' ] ; then # user config choice
		if [ -z "$TMUX" ] ; then # tmux not running
			session_number=$(tmux ls | wc -l)
			tmux attach -t TEL || tmux new-session -n "SSH" -s "TEL$session_number" 
		fi 
	fi
fi

