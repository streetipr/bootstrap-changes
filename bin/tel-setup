#!/usr/bin/env bash
#TEL setup file
#should be executed only once after the setup 

source ~/../usr/bin/tel-helpers 

if [ -z "$1" ]; then
	update_args="--setup"
else
	update_args="$1"
fi


UPDATE=false


if [ -f ~/.tel/.installed ]; then #set update var if finished installation was detected
	logf ".installed exists"
	error "TEL appears to already be installed. Continuing will replace all TEL files, you may also lose TEL user data. It is recommended to take a backup if you wish to continue. (command: tel-backup)"
   
	warn "Are you sure you want to continue? (y/N)"
	read -r user_reponse
	if [ "$user_reponse" != 'y' ] && [ "$user_reponse" != 'Y' ]; then
		error 'User exited the setup'
		exit 0
	fi
fi

log "Updating Termux packages..."
logf "apt-get upgrade"
apt-get update -y && apt-get upgrade -y && logf "finished updating Termux packages" #print to screen as hotfix

log "Installing required packages.."
log "This may take a while..."
logf "pkg install"
catch "$(pkg install fzf sl cowsay openssh tree bc fd curl wget nano tmux zsh neofetch git make figlet ncurses-utils termux-api sed util-linux -y 2>&1)"

log "Installing python"
logf "python install"
catch "$(pkg install python -y 2>&1)" 

log "Installing python package manager"
logf "pip install"
which -a pip | grep -q '[n]ot found' && catch "$(curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py 2>&1)" && catch "$(python get-pip.py 2>&1)" && rm -f get-pip.py #skip reinstalling if pip exists

log "Installing python packages"
logf "pip pkgs install"
catch "$(pip install --user blessed pywal lolcat powerline-status 2>&1)" #removed psutil
logf "Finished packages download and installation"

#create required directories
mkdir -p ~/.termux
mkdir -p ~/.tel
mkdir -p ~/.config
mkdir -p ~/bin

# # # # ZSH setup # # #
log "Installing OMZ + shell plugins"
rm -rf ~/.oh-my-zsh #incase setup is reran (must clone to empty dirs)
#logf "ohmyzsh"
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended  > /dev/null 2>&1 && logf "finished installing OhMyZsh"
chsh -s zsh #set zsh default shell

log "Fetching latest TEL files" #todo: optimize this

# Get updates!
~/../usr/bin/tel-update $update_args 

log "Installing TEL" #todo: optimize this
logf "tel data"

# install zsh plugins manually (sourced by ~/.tel/.telrc)
rm -rf ~/.tel/shell #incase setup is reran (must clone to empty dirs)
catch "$(git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/.tel/shell/prompt 2>&1)"
catch "$(~/.tel/shell/prompt/gitstatus/install 2>&1)"
catch "$(git clone --depth=1 https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh 2>&1)"
catch "$(git clone --depth=1 https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh 2>&1)"
#catch "$(git clone --depth=1 https://github.com/zsh-users/zsh-history-substring-search ~/.tel/shell/plugins/zsh-history-substring-search 2>&1)"
#sed -i 's/robbyrussell/avit/g' ~/.zshrc
sed -i 's/plugins=(git)/plugins=(git catimg fancy-ctrl-z zsh-syntax-highlighting zsh-autosuggestions zsh-completions)/g' ~/.zshrc #fzf maybe needed here

# setup tel loading
echo -e "	\n#|||||||||||||||#\n. ~/.tel/.telrc\n#|||||||||||||||#\n	" >> ~/.zshrc

if [ -f "$HOME/../usr/etc/motd_finished" ]; then
	#mv ~/../usr/etc/motd_finished ~/../usr/etc/motd #set final motd
	rm ~/../usr/etc/motd
fi

fix_permissions

if [ "$UPDATE" = false ]; then
	touch ~/.tel/.installed #mark setup finished
        log "Installation Complete"
else
        log "Update Complete"
fi
logf "complete"
log "app will restart in 3 seconds!"
sleep 3
tel-restart
error 'Restart cannot be performed automatically when app is not active'
error 'Please run the command "tel-restart" manually'
exit 0
