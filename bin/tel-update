#!/usr/bin/env bash

WHITE=${1:-"38;5;07"}
GREEN=${1:-"38;5;02"}
RED=${1:-"38;5;01"}
YELLOW=${1:-"38;2;93"}

log() {
	printf "\033[0;%sm%s\033[0m\033[0;%sm%s\033[0m\n" "${GREEN}" "[TEL]: " "${WHITE}" "${1}"

}
logf() {
	echo "[$(date '+%Y-%m-%d %H:%M:%S')]: ${1}" >> ~/.log.tel
}
warn() {
	printf "\033[0;%sm%s\033[0m\033[0;%sm%s\033[0m\n" "${YELLOW}" "[TEL]: " "${WHITE}" "${1}"
}
error() {
	printf "\033[0;%sm%s\033[0m\033[0;%sm%s\033[0m\n" "${RED}" "[TEL]: " "${WHITE}" "${1}"
}
rm_tel_data(){
	printf "\033[0;%sm%s\033[0m\033[0;%sm%s\033[0m\n" "${YELLOW}" "[TEL]: " "${WHITE}" " ! Warning ! this action will remove all TEL data from your device"
	printf "\033[0;%sm%s\033[0m\033[0;%sm%s\033[0m\n" "${YELLOW}" "[TEL]: " "${WHITE}" "Are you sure you wish to continue? Y/N"
	read -r user_reponse
	if [ "$user_reponse" != 'y' ] && [ "$user_reponse" != 'Y' ]; then
		error "User cancelled setup..." ; sleep 1 ; exit 1
	fi
	log "Wiping data..."
	rm -rf ~/.tel
	rm -rf ~/.oh-my-zsh
	rm -f ~/.zshrc
	rm -f ~/.zlogin # these will be all be overwritten by a full install of setup after .installed flag is removed anyway
	rm -f ~/.aliases
	rm -f ~/.envvar
	rm -f ~/../usr/etc/motd
}
rm_user_data(){
	warn "Removing user data..."
	rm -rf ~/.oh-my-zsh
	rm -f ~/.zshrc
	rm -f ~/.zlogin
	rm -f ~/.aliases
	rm -f ~/.envvar
	rm -rf ~/.tel/configs
	rm -rf ~/.tel/data
	rm -rf ~/.config
	rm -f ~/../usr/etc/motd
}
remove_tel_data='false'
remove_user_data='false'

if [ "$1" == '-h' ] || [ "$1" == '--help' ] ; then
	echo 'usage: tel-setup [OPTION]
	--help 		display this help info
	--update	get latest release updates
	--reset 	setup release version (destructive)
	--dev 		setup developer version (destructive)
	--custom	setup custom version (destructive)
	--extras	extra scripts'
	exit 0
elif [ "$1" == '--update' ] ; then
	log "Getting updates"
	branch='master'
elif [ "$1" == '--dev' ] ; then
	log "Getting developer version"
	remove_tel_data='true'
	branch='dev'
elif [ "$1" == '--custom' ] ; then
	log "Which branch do you want to setup? e.g: staging"
	read -r branch
	remove_tel_data='true'
	log "Getting $branch"
elif [ "$1" == '--reset' ] ; then
	log "Resetting & getting latest version"
	remove_tel_data='true'
	branch='master'
elif [ "$1" == '--extras' ] ; then
	if [ ! -f "$HOME/.tel/.installed" ]; then
		error 'Extras can only be installed after TEL has been setup'
	fi
	log "launching extras installer..."
	~/.tel/extras/setup.sh
	exit 0
elif [ -n "$1" ] ; then #user picked non option
	error "Unrecognised input option..."
	error "try 'tel-setup --help' to see availible options"
	exit 1
else
	log "Getting updates"
	branch='master'
fi

if [ ! -f "$HOME/.tel/.installed" ]; then
	pkg install wget unzip coreutils git -y 2>&1 || (error 'failed to download required setup utils' && exit 1)
fi

cd ~/../usr/ || (error 'fatal error path does not exist: ~/../usr/' && exit 1)
rm -rf bootstrap-changes
git clone --depth=1 https://github.com/t-e-l/bootstrap-changes || (error 'Failed to download update, please check connection and try again' ; exit 1)
#wget https://github.com/t-e-l/tel/raw/$branch/bootstrap/changes.zip 2>&1 || (error "failed to download update from $branch" && exit 1)
[[ "$remove_tel_data" == "true" ]] && rm_tel_data
[[ "$remove_user_data" == "true" ]] && rm_user_data
#unzip -o changes.zip 2>&1
shopt -u dotglob
# (include dotfiles in cp -r)
cp -rf bootstrap-changes/bin/* ~/../usr/bin
#:cp -rf --copy-contents bootstrap-changes/tel/ ~/
cp -rf bootstrap-changes/tel/.??* ~/
cp -rf bootstrap-changes/tel/bin/* ~/bin
mv -f bootstrap-changes/etc/motd_finished bootstrap-changes/etc/motd
cp -rf bootstrap-changes/etc/* ~/../usr/etc
rm -rf bootstrap-changes

# PERMISSIONS
chmod +x ~/../usr/bin/tel-fixperms
~/../usr/bin/tel-fixperms
log 'Update finished'
