#!/usr/bin/env bash
# TEL updater
source ~/../usr/bin/tel-helpers

update_permissions="true"
remove_data='false'

if [ "$1" == '-h' ] || [ "$1" == '--help' ] ; then
	echo 'usage: tel-setup [OPTION]
	--help 		display this help info
	--update	get latest release updates (default)
	--setup		ran by tel-setup (destructive)
	--reset 	setup release version (destructive)
	--dev 		setup developer version (destructive)
	--custom	setup custom version (destructive)
	--extras	extra scripts'
	exit 0
elif [ "$1" == '--update' ] ; then
	log "Getting updates"
	branch='master'
elif [ "$1" == '--setup' ] ; then
	log "Getting latest release changes"
	branch='master'
	update_permissions='false'
	remove_data='true'
elif [ "$1" == '--dev' ] ; then
	log "Getting latest dev changes"
	branch='dev'
	remove_data='true'
elif [ "$1" == '--custom' ] ; then
	log "Which branch do you want to setup? e.g: staging"
	read -r branch
	remove_data='true'
	log "Getting $branch changes"
elif [ "$1" == '--reset' ] ; then
	log "Resetting & getting latest version"
	remove_data='true'
	branch='master'
elif [ "$1" == '--extras' ] ; then
	if [ ! -f "$HOME/.tel/.installed" ]; then
		error 'Extras can only be installed after TEL has been setup'
	fi
	log "launching extras installer..."
	~/.tel/extras/setup.sh
	exit 0
elif [ -n "$1" ] ; then #user picked non option
	error "Unrecognised input option..."
	error "try 'tel-setup --help' to see availible options"
	exit 1
else
	log "Getting latest release changes"
	branch='master'
fi

if [ ! -f "$HOME/.tel/.installed" ]; then
	pkg install wget unzip coreutils git -y 2>&1 || (error 'failed to download required setup utils' && exit 1)
fi

[[ "$remove_data" == "true" ]] && reset_to_fresh_setup_no_prompt


cd ~/../usr/ || (error 'fatal error path does not exist: ~/../usr/' && exit 1)
rm -rf bootstrap-changes #incase last run failed with partial download 
git clone -b $branch --depth=1 https://github.com/t-e-l/bootstrap-changes || (error 'Failed to download update, please check connection and try again' ; exit 1)
shopt -u dotglob
# (include dotfiles in cp -r)
cp -rf bootstrap-changes/bin/* ~/../usr/bin
cp -rf bootstrap-changes/tel/.??* ~/
cp -rf bootstrap-changes/tel/bin/* ~/bin
cp -rf bootstrap-changes/etc/* ~/../usr/etc
rm -rf ~/../usr/etc/motd
rm -rf bootstrap-changes

# PERMISSIONS
[[ "$update_permissions" == "true" ]] && fix_permissions
log 'TEL updated'
